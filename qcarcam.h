#include <cstdint>
#include <mutex>

#ifndef __QCARCAM_H_
#define __QCARCAM_H_

#define QCARCAM_COLOR_FMT(_pattern_, _bitdepth_, _pack_) ((((uint32_t)(_pack_) & 0xffU) << 24) | (((uint32_t)(_bitdepth_) & 0xffU) << 16) | ((uint32_t)(_pattern_) & 0xffffU))

enum QCarCamRet_e {
    QCARCAM_RET_OK = 0,
    QCARCAM_RET_FAILED,
    QCARCAM_RET_BADPARAM,
    QCARCAM_RET_INVALID_OP,
    QCARCAM_RET_BADSTATE,
    QCARCAM_RET_NOT_PERMITTED,
    QCARCAM_RET_OUT_OF_BOUND,
    QCARCAM_RET_TIMEOUT,
    QCARCAM_RET_NOMEM,
    QCARCAM_RET_UNSUPPORTED,
    QCARCAM_RET_BUSY,
    QCARCAM_RET_NOT_FOUND,
    QCARCAM_RET_BIST_FAILURE,
    QCARCAM_RET_SENSOR_NOT_FOUND,
    QCARCAM_RET_FAS = 255
};

enum QCarCamColorPattern_e {
    QCARCAM_RAW = 0U,
    QCARCAM_YUV_YUYV = 0x100u,
    QCARCAM_YUV_YVYU,
    QCARCAM_YUV_UYVY,
    QCARCAM_YUV_VYUY,
    QCARCAM_YUV420_Y_UV = 0x104U,
    QCARCAM_YUV420_Y_VU = 0x105U,
    QCARCAM_YUV420_Y_U_V = 0x106U,
    QCARCAM_YUV420_Y_V_U = 0x107U,
    QCARCAM_YUV_NV12 = QCARCAM_YUV420_Y_UV,
    QCARCAM_YUV_NV21 = QCARCAM_YUV420_Y_VU,
    QCARCAM_YUV_YU12 = QCARCAM_YUV420_Y_U_V,
    QCARCAM_YUV_YV12 = QCARCAM_YUV420_Y_V_U,
    QCARCAM_YUV_Y,
    QCARCAM_YUV_Y12_UV8,
    QCARCAM_YUV_Y12_UV10,
    QCARCAM_YUV444_Y_U_V,
    QCARCAM_BAYER_GBRG = 0x200U,
    QCARCAM_BAYER_GRBG,
    QCARCAM_BAYER_RGGB,
    QCARCAM_BAYER_BGGR,
    QCARCAM_RGB = 0x300U,
    QCARCAM_RGB_RGB888 = QCARCAM_RGB,
    QCARCAM_RGB_BGR888,
    QCARCAM_RGB_RGB565,
    QCARCAM_RGB_RGBX8888,
    QCARCAM_RGB_BGRX8888,
    QCARCAM_RGB_RGBX1010102,
    QCARCAM_RGB_BGRX1010102,
    QCARCAM_RGB_R8_G8_B8,
    QCARCAM_COLORTYPE_MAX = 0x7fffffffU
};

enum QCarCamColorPack_e {
    QCARCAM_PACK_QTI = 0,
    QCARCAM_PACK_MIPI,
    QCARCAM_PACK_PLAIN8,
    QCARCAM_PACK_PLAIN16,
    QCARCAM_PACK_PLAIN32,
    QCARCAM_PACK_UBWC,
    QCARCAM_PACK_PLAIN16_MSB,
    QCARCAM_PACK_MAX = 0x7fffffffU
};

enum QCarCamColorBitDepth_e {
    QCARCAM_BITDEPTH_8 = 8U,
    QCARCAM_BITDEPTH_10 = 10U,
    QCARCAM_BITDEPTH_12 = 12U,
    QCARCAM_BITDEPTH_14 = 14U,
    QCARCAM_BITDEPTH_16 = 16U,
    QCARCAM_BITDEPTH_20 = 20U,
    QCARCAM_BITDEPTH_24 = 24U,
    QCARCAM_BITDEPTH_32 = 32U,
    QCARCAM_BITDEPTH_MAX = 0x7fffffffU
};

enum QCarCamColorFmt_e {
    QCARCAM_FMT_MIPIRAW_8 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_8, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_MIPIRAW_10 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_10, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_MIPIRAW_12 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_12, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_MIPIRAW_14 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_14, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_MIPIRAW_16 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_16, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_MIPIRAW_20 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_20, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_PLAIN16_10 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_10, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_PLAIN16_12 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_12, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_PLAIN16_14 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_14, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_PLAIN16_16 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_16, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_PLAIN32_20 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_20, QCARCAM_PACK_PLAIN32),
    QCARCAM_FMT_PLAIN32_32 = QCARCAM_COLOR_FMT(QCARCAM_RAW, QCARCAM_BITDEPTH_32, QCARCAM_PACK_PLAIN32),
    QCARCAM_FMT_UYVY_8 = QCARCAM_COLOR_FMT(QCARCAM_YUV_UYVY, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_UYVY_10 = QCARCAM_COLOR_FMT(QCARCAM_YUV_UYVY, QCARCAM_BITDEPTH_10, QCARCAM_PACK_QTI),
    QCARCAM_FMT_UYVY_12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_UYVY, QCARCAM_BITDEPTH_12, QCARCAM_PACK_QTI),
    QCARCAM_FMT_YUYV_8 = QCARCAM_COLOR_FMT(QCARCAM_YUV_YUYV, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_YUYV_10 = QCARCAM_COLOR_FMT(QCARCAM_YUV_YUYV, QCARCAM_BITDEPTH_10, QCARCAM_PACK_QTI),
    QCARCAM_FMT_YUYV_12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_YUYV, QCARCAM_BITDEPTH_12, QCARCAM_PACK_QTI),
    QCARCAM_FMT_NV12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_NV12, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_NV21 = QCARCAM_COLOR_FMT(QCARCAM_YUV_NV21, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_YU12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_YU12, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_YV12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_YV12, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_Y8 = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_Y10 = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y, QCARCAM_BITDEPTH_10, QCARCAM_PACK_PLAIN16_MSB),
    QCARCAM_FMT_Y10LSB = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y, QCARCAM_BITDEPTH_10, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_MIPIUYVY_10 = QCARCAM_COLOR_FMT(QCARCAM_YUV_UYVY, QCARCAM_BITDEPTH_10, QCARCAM_PACK_MIPI),
    QCARCAM_FMT_P010 = QCARCAM_COLOR_FMT(QCARCAM_YUV420_Y_UV, QCARCAM_BITDEPTH_10, QCARCAM_PACK_PLAIN16_MSB),
    QCARCAM_FMT_P010LSB = QCARCAM_COLOR_FMT(QCARCAM_YUV420_Y_UV, QCARCAM_BITDEPTH_10, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_P01210 = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y12_UV10, QCARCAM_BITDEPTH_12, QCARCAM_PACK_PLAIN16_MSB),
    QCARCAM_FMT_P01208 = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y12_UV8, QCARCAM_BITDEPTH_12, QCARCAM_PACK_PLAIN16_MSB),
    QCARCAM_FMT_P01210LSB = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y12_UV10, QCARCAM_BITDEPTH_12, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_P01208LSB = QCARCAM_COLOR_FMT(QCARCAM_YUV_Y12_UV8, QCARCAM_BITDEPTH_12, QCARCAM_PACK_PLAIN16),
    QCARCAM_FMT_YUV444_888 = QCARCAM_COLOR_FMT(QCARCAM_YUV444_Y_U_V, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_RGB_888 = QCARCAM_COLOR_FMT(QCARCAM_RGB, QCARCAM_BITDEPTH_24, QCARCAM_PACK_QTI),
    QCARCAM_FMT_BGR_888 = QCARCAM_COLOR_FMT(QCARCAM_RGB_BGR888, QCARCAM_BITDEPTH_24, QCARCAM_PACK_QTI),
    QCARCAM_FMT_RGB_565 = QCARCAM_COLOR_FMT(QCARCAM_RGB_RGB565, QCARCAM_BITDEPTH_16, QCARCAM_PACK_QTI),
    QCARCAM_FMT_RGBX_8888 = QCARCAM_COLOR_FMT(QCARCAM_RGB_RGBX8888, QCARCAM_BITDEPTH_32, QCARCAM_PACK_QTI),
    QCARCAM_FMT_BGRX_8888 = QCARCAM_COLOR_FMT(QCARCAM_RGB_BGRX8888, QCARCAM_BITDEPTH_32, QCARCAM_PACK_QTI),
    QCARCAM_FMT_RGBX_1010102 = QCARCAM_COLOR_FMT(QCARCAM_RGB_RGBX1010102, QCARCAM_BITDEPTH_32, QCARCAM_PACK_QTI),
    QCARCAM_FMT_BGRX_1010102 = QCARCAM_COLOR_FMT(QCARCAM_RGB_BGRX1010102, QCARCAM_BITDEPTH_32, QCARCAM_PACK_QTI),
    QCARCAM_FMT_R8_G8_B8 = QCARCAM_COLOR_FMT(QCARCAM_RGB_R8_G8_B8, QCARCAM_BITDEPTH_8, QCARCAM_PACK_QTI),
    QCARCAM_FMT_UBWC_NV12 = QCARCAM_COLOR_FMT(QCARCAM_YUV_NV12, QCARCAM_BITDEPTH_8, QCARCAM_PACK_UBWC),
    QCARCAM_FMT_UBWC_TP10 = QCARCAM_COLOR_FMT(QCARCAM_YUV420_Y_UV, QCARCAM_BITDEPTH_10, QCARCAM_PACK_UBWC),
    QCARCAM_FMT_MAX = 0x7FFFFFFF
};

enum QCarCamOpmode_e {
    QCARCAM_OPMODE_RAW_DUMP,
    QCARCAM_OPMODE_ISP,
    QCARCAM_OPMODE_OFFLINE_ISP,
    QCARCAM_OPMODE_PAIRED_INPUT,
    QCARCAM_OPMODE_DEINTERLACE,
    QCARCAM_OPMODE_RDI_CONVERSION,
    QCARCAM_OPMODE_TRANSFORMER,
    QCARCAM_OPMODE_PREPROCESS_ISP,
};

enum QCarCamField_e {
    QCARCAM_INTERLACE_FIELD_UNKNOWN = 0,
    QCARCAM_INTERLACE_FIELD_ODD,
    QCARCAM_INTERLACE_FIELD_EVEN,
    QCARCAM_INTERLACE_FIELD_ODD_EVEN,
    QCARCAM_INTERLACE_FIELD_EVEN_ODD,
};

struct QCarCamInit_t {
    uint32_t flags;
    uint32_t apiVersion;
};

struct QCarCamInput_t {
    uint32_t inputId;
    uint32_t devId;
    uint32_t subdevId;
    char inputName[128];
    uint32_t numModes;
    uint32_t flags;
};

struct QCarCamInputSrc_t {
    uint32_t srcId;
    uint32_t width;
    uint32_t height;
    QCarCamColorFmt_e colorFmt;
    float fps;
    uint32_t securityDomain;
};

struct QCarCamMode_t {
    QCarCamInputSrc_t source[128];
    uint32_t numSources;
};

struct QCarCamInputModes_t {
    uint32_t currentMode;
    uint32_t numModes;
    QCarCamMode_t* pModes;
};

struct QCarCamOpenInput_t {
    uint32_t inputId;
    uint32_t srcId;
    uint32_t inputMode;
};

struct QCarCamOpen_t {
    QCarCamOpmode_e opMode;
    uint32_t priority;
    uint32_t flags;
    QCarCamOpenInput_t inputs[128];
    uint32_t numInputs;
};

struct QCarCamPlane_t {
    uint32_t width;
    uint32_t height;
    uint32_t stride;
    uint32_t size;
    uint64_t memHndl;
    uint32_t offset;
};

struct QCarCamBuffer_t {
    QCarCamPlane_t planes[128];
    uint32_t numPlanes;
};

struct QCarCamBufferList_t {
    uint32_t id;
    QCarCamColorFmt_e colorFmt;
    QCarCamBuffer_t *pBuffers;
    uint32_t nBuffers;
    uint32_t flags;
};

struct QCarCamHndl_t {
    int32_t hndlNum;
    int32_t bufferListId;
    QCarCamBufferList_t pBufferList;
};

inline QCarCamHndl_t QCARCAM_HNDL_INVALID = {.hndlNum = -1, .bufferListId = -1, .pBufferList{}};

struct QCarCamHWTimestamp_t {
    uint64_t timestamp;
    uint64_t timestampGPTP;
};

struct QCarCamBatchFramesInfo_t {
    uint32_t frameId;
    QCarCamHWTimestamp_t timestamp;
};

struct QCarCamFrameInfo_t {
    uint32_t id;
    uint32_t bufferIndex;
    uint32_t seqNo;
    uint32_t timestamp;
    QCarCamHWTimestamp_t sofTimestamp;
    uint32_t flags;
    QCarCamField_e field_type;
    uint32_t requestId;
    uint32_t inputMetaIdx;
    QCarCamBatchFramesInfo_t batchFramesInfo[128];
};

#endif